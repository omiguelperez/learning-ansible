---

- name: Upgrade packages
  hosts: all
  become: yes

  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist

- name: Create users
  hosts: all
  become: yes

  tasks:
    - name: Create user deploy
      user:
        name: deploy
        shell: /bin/bash
        groups: sudo

- name: Install rbenv and dependencies
  hosts: all
  become: yes

  tasks:
    - name: Install rbenv
      apt:
        name: rbenv
        state: present
        update_cache: yes
    
    - name: Install dependencies
      apt: 
        name: "{{ item }}" 
        state: present 
        update_cache: yes
      with_items:
        - build-essential
        - libssl-dev
        - libreadline-dev
        - zlib1g-dev

- name: Install git before rbenv configuration
  hosts: all
  become: yes

  tasks:
    - name: Install git
      apt:
        name: git
        state: present
        update_cache: yes

- name: Configure rbenv and install ruby
  hosts: all
  become: yes
  become_user: deploy

  tasks:
    - name: Automatically init rbenv
      lineinfile:
        dest: ~/.bashrc
        regexp: eval "\$\(rbenv init -\)"
        line: eval "$(rbenv init -)"
        insertafter: EOF

    - name: Install rbenv ruby-build plugin
      git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: ~/.rbenv/plugins/ruby-build
    
    - name: Automatically init ruby-build
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH="\$HOME\/.rbenv\/plugins\/ruby-build\/bin:\$PATH"
        line: export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
        insertafter: EOF

    - name: Install ruby 2.4.0
      command: rbenv install 2.4.0
      args:
        creates: ~/.rbenv/versions/2.4.0
    
    - name: Make ruby 2.4.0 global
      command: rbenv global 2.4.0
    
    - name: Install Bundler
      shell: eval "$(/usr/bin/rbenv init -)" && gem install bundler
      args:
        executable: /bin/bash
        creates: ~/.rbenv/versions/2.4.0/bin/bundler
    
    - name: Rehash rbenv
      command: rbenv rehash

- name: Install nginx and passenger
  hosts: all
  become: yes
  become_user: root
  tags:
    - nginx
    - passenger
  
  tasks:
    - name: Add repository key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 561F9B9CAC40B2F7
    
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
    
    - name: Add Passenger APT repository
      apt_repository:
        repo: deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main
        state: present
  
    - name: Install nginx and passenger
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - nginx-extras
        - passenger

- name: Configure nginx and passenger
  hosts: all
  become: yes
  become_user: root
  tags:
    - nginx
    - passenger
  
  tasks:
    - name: Include Passenger configuration in nginx
      lineinfile:
        dest: /etc/nginx/nginx.conf
        regexp: include \/etc\/nginx\/passenger\.conf;
        line: include /etc/nginx/passenger.conf;
        insertafter: EOF

    - name: Point Passenger to the version of Ruby that we're using
      lineinfile:
        dest: /etc/nginx/passenger.conf 
        regexp: passenger_ruby .*;
        line: passenger_ruby /home/deploy/.rbenv/shims/ruby;
        insertafter: EOF

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- name: Install mysql server
  hosts: all
  become: yes
  become_user: root
  tags:
    - mysql
  
  tasks:
    - name: Set MySQL root password before installing
      debconf:
        name: mysql-server
        question: mysql-server/root_password
        value: 12345
        vtype: password

    - name: Confirm MySQL root password before installing
      debconf:
        name: mysql-server
        question: mysql-server/root_password_again
        value: 12345
        vtype: password

    - name: Install MySQL
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - mysql-server
        - mysql-client
        - libmysqlclient-dev
        - python-mysqldb

    - name: Copy MySQL automatic login file
      copy:
        src: my.cnf
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0600

- name: Install application
  hosts: all
  become: yes
  become_user: root
  tags: app

  tasks: 
    - name: Clone app repository
      become_user: deploy
      git:
        repo: https://github.com/omiguelperez/DuckRecognizer.git
        dest: ~/DuckRecognizer

    - name: Copy nginx host configuration
      copy:
        src: app.conf
        dest: /etc/nginx/sites-enabled/default
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- name: Configure MySQL database
  hosts: all
  become: yes
  become_user: root
  tags:
    - app
    - db

  tasks:
    - name: Create database
      mysql_db:
        name: DuckRecognizer
        state: present

    - name: Create and give permissions
      mysql_user:
        name: duckuser
        password: duckuser
        priv: 'DuckRecognizer.*:ALL'
        state: present
